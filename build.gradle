plugins {
	id 'org.springframework.boot' version '2.3.4.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'org.asciidoctor.convert' version '1.5.8'
	id 'java'
}

group = 'com'
version = '0.0.1-SNAPSHOT'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/snapshot' }
	maven { url 'https://repo.spring.io/milestone' }
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
	set('springCloudVersion', "Hoxton.RELEASE")
	set('spring-security.version', "5.1.3.RELEASE")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	compileOnly 'org.projectlombok:lombok'
	compile "org.mapstruct:mapstruct:1.3.1.Final"
	compile 'commons-codec:commons-codec:1.15'
	compile("org.postgresql:postgresql")
	compile "org.springframework.security:spring-security-web"
	compile "org.springframework.security:spring-security-config"
	compile "org.springframework.boot:spring-boot-starter-mail"
	compile "io.jsonwebtoken:jjwt:0.9.1"
	compile "javax.xml.bind:jaxb-api:2.3.0"
	compile("com.h2database:h2")
	compile 'io.micrometer:micrometer-registry-prometheus:latest.release'
	compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
	compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'
	compile "com.fasterxml.jackson.datatype:jackson-datatype-hibernate5:2.10.4"
	runtimeOnly 'com.oracle.ojdbc:ojdbc8'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor "org.mapstruct:mapstruct-processor:1.3.1.Final"
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

asciidoctor {
	inputs.dir snippetsDir
	dependsOn test
}
